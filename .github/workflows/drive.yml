# This is a basic workflow to help you get started with Actions

name: flutter drive

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: '*'
  pull_request:
    branches: [ dev ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  drive:
    strategy:
      matrix:
        device:
          - "iPhone 8 Plus"
          - "iPhone 11 Pro Max"
      fail-fast: false
    # The type of runner that the job will run on
    runs-on: macos-10.15

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v2

      - name: "List all simulators"
        run: xcrun simctl list 'devices' 'available' | egrep '${{ matrix.device }}'
      - name: "Start Simulator"
        run: |
          xcrun simctl list 'devices' 'available' | egrep '${{ matrix.device }}' >> test_driver/utils/devices.txt
          export UDID=$(python3 test_driver/utils/extract_udid.py)
          xcrun simctl erase $UDID
          xcrun simctl boot $UDID

      # https://github.com/actions/setup-java
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      # https://github.com/KomodoPlatform/flutter-action
      - uses: KomodoPlatform/flutter-action@v1
        with:
          flutter-version: '1.22.4'
      
      # in case of actual usage this step should be 
      # downloading recent mm2libs from gitlab
      - name: download mm2lib from s3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          pip3 install boto3
          python3 test_driver/aws_S3_mm_binaries_setup.py

      - name: "doctor"
        run: flutter doctor -v
        
      - name: "Prepare for Flutter Driver tests"
        run: echo "d" | flutter run -t test_driver/app.dart --vmservice-out-file=test_driver/link.txt --pid-file=test_driver/pid.txt
        
      - name: "Run Flutter Driver tests"
        run: flutter drive --target=test_driver/1-create-wallet.dart --use-existing-app="$(cat test_driver/link.txt)"
